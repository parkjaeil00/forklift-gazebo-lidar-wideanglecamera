<?xml version="1.0"?>
<launch>

  <!-- warehouse simulation environment -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find warehouse_simulation)/models:$(find forklift_simulator)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find warehouse_simulation)/models:$(find forklift_simulator)/models"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find warehouse_simulation)/worlds/warehouse.world"/>
    <arg name="paused" value="false"/>
    <arg name="gui" value="true"/> 
  </include>



  <!-- add forklift robot -->
  <arg name="forklift_x" default="2.0"/>
  <arg name="forklift_y" default="0.0"/>
  <arg name="forklift_z" default="0.3"/>

    <!-- URDF는 xacro 아님. textfile= 사용 -->
  <param name="robot_description" textfile="$(find warehouse_simulation)/urdf/forklift_b.urdf"/>

  <!-- TF와 Gazebo 모두 동일한 robot_description 사용 -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_forklift"
        args="-urdf -model forklift_b -x $(arg forklift_x) -y $(arg forklift_y) -z $(arg forklift_z) -param robot_description"
        output="screen"/>

  <!-- 올바르게 robot_description 사용하는 TF 퍼블리셔 -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="publish_frequency" value="40.0"/>
  </node>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />


  <!-- Localization  -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="log">
    <param name="maxRange" value="10"/>
    <param name="xmin" value="-12"/>
    <param name="ymin" value="-12"/>
    <param name="xmax" value="12"/>
    <param name="ymax" value="12"/>
    <param name="delta" value="0.05"/>
    <param name="particles" value="4"/>
    <param name="temporalUpdate" value="1.0"/>
    <param name="angularUpdate" value="0.3"/>
    <param name="linearUpdate" value="0.3"/>
    <param name="map_update_interval" value="2.0"/>
  </node>

  <!-- Navigation -->
  <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
    <rosparam file="$(find warehouse_simulation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find warehouse_simulation)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find warehouse_simulation)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find warehouse_simulation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find warehouse_simulation)/param/navfn.yaml" command="load" />
    <param name="global_costmap/global_frame" value="map"/>
    <param name="global_costmap/robot_base_frame" value="base_link"/>
    <param name="local_costmap/global_frame" value="odom"/>
    <param name="local_costmap/robot_base_frame" value="base_link"/>
  </node>

  <!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find warehouse_simulation)/rviz/navigation.rviz" output="screen"/>

  <!-- trajectory display -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server" ns="pioneer" >
    <param name="/target_frame_name" value="map" />
    <param name="/source_frame_name" value="base_link" />
    <param name="/trajectory_update_rate" value="10.0" />
    <param name="/trajectory_publish_rate" value="10.0" />
  </node>

</launch>
